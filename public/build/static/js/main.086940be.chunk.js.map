{"version":3,"sources":["components/LaunchItem.js","components/Launches.js","components/Launch.js","App.js","reportWebVitals.js","index.js"],"names":["LaunchItem","launch","flight_number","mission_name","launch_year","launch_success","className","classNames","to","LAUNCHES_QUERY","gql","Launches","query","loading","error","data","console","log","launches","map","Component","LAUNCH_QUERY","Launch","this","props","match","params","parseInt","variables","rocket","rocket_id","rocket_name","rocket_type","client","ApolloClient","uri","App","path","exact","component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.086940be.chunk.js","sourcesContent":["import React from 'react'\r\nimport classNames from 'classnames'\r\nimport {Link} from 'react-router-dom'\r\n\r\nexport default function LaunchItem({launch:{flight_number, mission_name,launch_year,launch_success}}) {\r\n    return (\r\n        <div className=\"card card-body mb-3\">\r\n            <div className=\"row\">\r\n                <div className=\"col-md-9\">\r\n                    <h4>Mission :\r\n                        <span className={classNames({\r\n                            'text-success':launch_success,\r\n                            'text-danger': !launch_success\r\n                        })} >\r\n                        {mission_name}\r\n                            </span></h4>\r\n                    <p>Date: {launch_year}</p>\r\n\r\n                </div>\r\n                <div className=\"col-md-3\">\r\n                        <Link className=\"btn btn-secondary\" to={`/launch/${flight_number}`}>Details</Link>\r\n\r\n                </div>\r\n\r\n            </div>\r\n            \r\n        </div>\r\n    )\r\n}\r\n","import React, { Component, Fragment } from 'react'\r\nimport gql from 'graphql-tag'\r\nimport {Query} from 'react-apollo'\r\nimport LaunchItem from './LaunchItem'\r\n\r\nconst LAUNCHES_QUERY = gql`\r\nquery launchesQuery{\r\n    launches {\r\n        flight_number\r\n        mission_name\r\n        launch_success\r\n        launch_year\r\n\r\n    }\r\n}\r\n`\r\n\r\nexport class Launches extends Component {\r\n    render() {\r\n        return (\r\n            <Fragment>\r\n                <h1>Launches</h1>\r\n                <Query query={LAUNCHES_QUERY}>\r\n                    {\r\n                        ({loading, error, data}) =>{\r\n                            if(loading) return <h4>Loading..</h4>\r\n                            if(error)console.log(error);\r\n                            console.log(data)\r\n\r\n                            return <Fragment>\r\n                                {data.launches.map((launch)=>(\r\n                                <LaunchItem key={launch.flight_number} launch={launch} />\r\n                                    ))}\r\n\r\n                            </Fragment>\r\n\r\n\r\n                        }\r\n                    }\r\n                </Query>\r\n\r\n                \r\n                \r\n            </Fragment>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Launches\r\n","import React, { Component } from 'react'\r\nimport gql from 'graphql-tag'\r\nimport {Query} from 'react-apollo'\r\nimport classNames from 'classnames'\r\n\r\nconst LAUNCH_QUERY = gql`\r\nquery LaunchQuery($flight_number: Int!){\r\n    launch(flight_number: $flight_number){\r\n        flight_number\r\n        mission_name\r\n        launch_year\r\n        launch_success,\r\n        rocket{\r\n            rocket_id\r\n            rocket_name\r\n            rocket_type\r\n        }\r\n    }\r\n}\r\n`\r\n\r\nexport class  Launch extends Component{\r\n    render(){\r\n        let{flight_number} = this.props.match.params;\r\n        flight_number = parseInt(flight_number)\r\n        return (\r\n            <>\r\n                <Query query={LAUNCH_QUERY} variables={{flight_number}} >\r\n                    {\r\n                        ({loading, error, data}) =>{\r\n                            if(loading) return<h4>Loading..</h4>\r\n                            if(error) console.log(error)\r\n\r\n                            const{mission_name, flight_number, launch_year,  launch_success,rocket:{\r\n                                rocket_id, rocket_name, rocket_type\r\n                            }}=data.launch\r\n                            return <div>\r\n                                <h1>Mission : {mission_name}</h1>\r\n                                <h4 className=\"mb-3 mt-3\">Launch Deatils</h4>\r\n                                <ul className=\"list-group\">\r\n                                    <li className=\"list-group-item\">Flight Number: {flight_number}</li>\r\n                                    <li className=\"list-group-item\">Launch Year: {launch_year}</li>\r\n                                    <li className=\"list-group-item\">Launch Successful: \r\n                                    <span className = {classNames({\r\n                                        'text-success':launch_success,\r\n                                        'text-danger':!launch_success\r\n                                    })}>\r\n                                    {launch_success? 'Yes': \"No\"}\r\n                                    </span>\r\n                                    </li>\r\n                                    <li className=\"list-group-item\">Flight Number: {flight_number}</li>\r\n\r\n                                </ul>\r\n\r\n                                <h4 className=\"my-3\">Rocket Details</h4>\r\n                                <ul className=\"list-group\">\r\n                                    <li className=\"list-group-item\">Rocket ID: {rocket_id}</li>\r\n                                    <li className=\"list-group-item\">Rocket Name: {rocket_name}</li>\r\n                                    <li className=\"list-group-item\">Rocket Type: {rocket_type}</li>\r\n\r\n                                </ul>\r\n                            </div>\r\n\r\n                        }\r\n                    }\r\n\r\n                </Query>\r\n            </>\r\n        )\r\n    }\r\n\r\n}\r\n\r\nexport default Launch;","import \"./App.css\";\nimport ApolloClient from \"apollo-boost\";\nimport { ApolloProvider } from \"react-apollo\";\nimport { BrowserRouter as Router, Route } from \"react-router-dom\";\nimport Launches from \"./components/Launches\";\nimport Launch from \"./components/Launch\";\n\nconst client = new ApolloClient({\n  uri: \"/graphql\",\n});\n\nfunction App() {\n  return (\n    <ApolloProvider client={client}>\n      <Router>\n        <div className=\"container\">\n          <Route path=\"/\" exact component={Launches} />\n          <Route exact path=\"/launch/:flight_number\" component={Launch}/>\n\n        </div>\n      </Router>\n    </ApolloProvider>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './bootstrap.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}